#!/bin/sh

# Pre-push hook script to run code quality checks and ensure consistency.
#
# This script will execute two custom scripts located in the `scripts/` directory:
# 1. Enforce cargo version 1.75.
# 2. clippy-on-all-workspaces.sh: Runs Clippy, tests, and formatting on all specified workspaces.
# 3. sv2-header-check.sh: Ensures the `sv2.h` file generated by `build_header.sh` matches the
#    committed version.

# Exit immediately if any command exits with a non-zero status and print each command before
# executing it.
set -xe

# Enforce minimum cargo version 1.75
REQUIRED_CARGO_VERSION="1.75.0"
INSTALLED_CARGO_VERSION=$(cargo --version | awk '{print $2}')

# Function to compare version numbers
version_ge() {
    [ "$(printf '%s\n' "$@" | sort -V | head -n 1)" = "$2" ]
}

if ! version_ge "$INSTALLED_CARGO_VERSION" "$REQUIRED_CARGO_VERSION"; then
    echo "Error: Cargo version $REQUIRED_CARGO_VERSION or higher is required. Installed version is $INSTALLED_CARGO_VERSION."
    exit 1
fi

# Enforce lock files are not changed during clippy, test, and rustfmt
if ! cargo build --manifest-path=roles/Cargo.toml --locked; then
    echo "Error: Cargo.lock file in roles crate is out of date. Please run 'cargo update' in the roles crate."
    exit 1
fi

if ! cargo build --manifest-path=utils/Cargo.toml --locked; then
    echo "Error: Cargo.lock file in utils crate is out of date. Please run 'cargo update' in the utils crate."
    exit 1
fi

echo "All builds succeeded with up-to-date Cargo.lock files."

# Run clippy, test, and rustfmt on all workspaces
sh ./scripts/clippy-fmt-and-test.sh
if [ $? -ne 0 ]; then
    echo "Clippy checks or tests failed."
    exit 1
fi

# Run sv2 header check
sh ./scripts/sv2-header-check.sh
if [ $? -ne 0 ]; then
    echo "SV2 header check failed."
    exit 1
fi

echo "Pre-push checks passed successfully."
